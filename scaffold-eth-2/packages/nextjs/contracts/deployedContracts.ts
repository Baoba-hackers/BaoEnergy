/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155111: {
    BaoEnergy: {
      address: "0x3843b4231B17296657CC59405210070A6efC4D5d",
      abi: [
        {
          inputs: [
            {
              internalType: "uint64",
              name: "functionsSubscriptionId",
              type: "uint64",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "EmptyArgs",
          type: "error",
        },
        {
          inputs: [],
          name: "EmptySource",
          type: "error",
        },
        {
          inputs: [],
          name: "NoInlineSecrets",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyRouterCanFulfill",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "averagePrice",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "Response",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "_id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "_decision",
              type: "bool",
            },
          ],
          name: "answeredPropose",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "consumer",
              type: "address",
            },
          ],
          name: "newConsumerRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "newDistributorAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "newProposeAdded",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_cnpj",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_pricePerMonthKWH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_localId",
              type: "uint256",
            },
          ],
          name: "addDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_energyConsume",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_pricePerMonth",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_localId",
              type: "uint256",
            },
          ],
          name: "addPropose",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_id",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_decision",
              type: "bool",
            },
          ],
          name: "answerPropose",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_localId",
              type: "uint256",
            },
          ],
          name: "bestOptions",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "cnpj",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "pricePerMonthKWH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "localId",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "active",
                  type: "bool",
                },
              ],
              internalType: "struct BaoEnergy.Distributor[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "consumerToUserContract",
          outputs: [
            {
              internalType: "uint256",
              name: "energyConsume",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "pricePerMonth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timeStamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "localId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "contractDeadLine",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "consumers",
          outputs: [
            {
              internalType: "bool",
              name: "isMemberOfFreeEnergyMarket",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "cnpj",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "localId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "distributors",
          outputs: [
            {
              internalType: "uint256",
              name: "cnpj",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "pricePerMonthKWH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "localId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "deviceId",
              type: "string",
            },
          ],
          name: "getMeasure",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getProposes",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "energyConsume",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "pricePerMonth",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "timeStamp",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "localId",
                      type: "uint256",
                    },
                    {
                      internalType: "bool",
                      name: "active",
                      type: "bool",
                    },
                    {
                      internalType: "uint256",
                      name: "contractDeadLine",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct BaoFunction.UserContract",
                  name: "userContract",
                  type: "tuple",
                },
                {
                  internalType: "address",
                  name: "distributor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "consumer",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "answered",
                  type: "bool",
                },
              ],
              internalType: "struct BaoEnergy.Propose[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "handleOracleFulfillment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "lastError",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastResponse",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "localIdToDistributors",
          outputs: [
            {
              internalType: "uint256",
              name: "cnpj",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "pricePerMonthKWH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "localId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "localToContract",
          outputs: [
            {
              internalType: "uint256",
              name: "energyConsume",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "pricePerMonth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timeStamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "localId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "contractDeadLine",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "proposes",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "energyConsume",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "pricePerMonth",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timeStamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "localId",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "active",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "contractDeadLine",
                  type: "uint256",
                },
              ],
              internalType: "struct BaoFunction.UserContract",
              name: "userContract",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "distributor",
              type: "address",
            },
            {
              internalType: "address",
              name: "consumer",
              type: "address",
            },
            {
              internalType: "bool",
              name: "answered",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_cnpj",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_localId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_isMemberOfFreeEnergyMarket",
              type: "bool",
            },
          ],
          name: "registerConsumer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "requestIds",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "requests",
          outputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
            {
              internalType: "bool",
              name: "fulfilled",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "source",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "subscriptionId",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        consumerToUserContract: "contracts/BaoFunction.sol",
        getMeasure: "contracts/BaoFunction.sol",
        handleOracleFulfillment: "contracts/BaoFunction.sol",
        lastError: "contracts/BaoFunction.sol",
        lastRequestId: "contracts/BaoFunction.sol",
        lastResponse: "contracts/BaoFunction.sol",
        requestIds: "contracts/BaoFunction.sol",
        requests: "contracts/BaoFunction.sol",
        source: "contracts/BaoFunction.sol",
        subscriptionId: "contracts/BaoFunction.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
